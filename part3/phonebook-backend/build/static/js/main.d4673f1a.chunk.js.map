{"version":3,"sources":["components/Person.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/personsServices.js","App.js","index.js"],"names":["Person","person","onDelete","name","number","onClick","id","Persons","persons","filter","filteredPersons","handlePersonDelete","showPersons","toLowerCase","includes","map","PersonForm","handleFilterChange","onSubmit","handleNameChange","handleNumberChange","newName","newNumber","value","onChange","type","Notification","notification","style","message","className","baseUrl","axios","get","then","response","data","newPerson","post","updatePerson","put","delete","App","useState","setPersons","setNotification","setNewName","setNewNumber","setFilter","setFilteredPersons","useEffect","personsServices","initialPersons","event","target","personsToShow","console","log","preventDefault","some","window","confirm","existingPerson","find","returnedPerson","setTimeout","catch","error","concat","personToBeDeleted","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4673f1a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ( {person, onDelete} )  => {\n    return (\n      <>\n      {person.name} {person.number} <button onClick={() => onDelete(person.id)}>delete</button> <br></br>\n      </>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, filteredPersons, filter, handlePersonDelete } ) => {\n    // forces elements to appear after addition even when there currently is a filter in place\n    const showPersons = filter ? persons.filter((person) =>\n      person.name.toLowerCase().includes(filter.toLowerCase())) : persons\n    return (\n      <>\n        {showPersons.map(person => <Person key={person.name} person={person} onDelete={handlePersonDelete}/>)}\n      </>\n    )\n  }\n\n  export default Persons","import React from 'react'\n\nconst PersonForm = ( {\n    filter,\n    handleFilterChange,\n    onSubmit,\n    handleNameChange,\n    handleNumberChange,\n    newName,\n    newNumber} ) => {\n      return (\n        <div>\n          <h2>Persons</h2>\n          <div>\n            filter shown with: <input value={filter} onChange={handleFilterChange}/>\n          </div>\n          <form onSubmit={onSubmit}>\n            <h2>add a new</h2>\n            <div>\n              name: <input value={newName} onChange={handleNameChange}/>\n            </div>\n            <div>\n            number: <input value={newNumber} onChange={handleNumberChange}/>\n            </div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n          </form>\n        </div>\n      )\n    }\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({notification}) => {\n  const {style, message} = notification\n    if (message == null) {\n      return null\n    }\n  \n    \n    return (\n      <div className={style}> \n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import axios from 'axios'\nconst baseUrl ='https://dry-oasis-41714.herokuapp.com/api/persons/'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst update = (id, updatePerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatePerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, update, deletePerson}\n\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personsServices from './services/personsServices'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ notification, setNotification ] = useState( {\n    style: null,\n    message: null\n  })\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter] = useState('')\n  const [filteredPersons, setFilteredPersons] = useState([])\n\n  // fetch initial data from json server\n  useEffect(() => {\n    personsServices\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  // addPerson function\n  const addPerson = (event) => {\n    event.preventDefault()\n    // check whether name already exists in phone book\n    const personAlreadyExists = persons.some(person => person.name === newName)\n    if(personAlreadyExists){\n      const updateNumber = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(updateNumber){\n        const existingPerson = persons.find(person=> person.name === newName)\n        const { id } = existingPerson\n        // create shallow copy of person to be updated with their new number\n        const newPerson = {...existingPerson, number: newNumber}\n        personsServices\n          .update(id, newPerson)\n          .then(returnedPerson => {\n            console.log(returnedPerson);\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotification({\n              style: 'successful',\n              message: `Added ${returnedPerson.name}`\n            });\n            setTimeout(() => {\n              setNotification({style: null, message: null}) // reset notification in order to disappear after three seconds\n            }, 3000)\n          })\n          .catch(error => {\n            setNotification({\n              style: 'error',\n              message:`${existingPerson.name} has already been removed from the server`\n            });\n            setTimeout(() => {\n              setNotification({style: null, message: null}) // reset notification in order to disappear after three seconds\n            }, 3000)\n          });  \n      }\n    } else {\n      // otherwise create new Person object\n      const newPersonObject = {\n        name: newName,\n        number: newNumber\n      }\n      // use personsServices component to accomplish addition to backend server via HTTP Post \n      personsServices\n        .create(newPersonObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotification({\n            style: 'successful',\n            message: `Added ${returnedPerson.name}`\n          })\n          setTimeout(() => {\n            setNotification({message: null, style: null}) // reset notification in order to disappear after three seconds\n          }, 3000);\n\n        })\n        .catch(error => {\n          setNotification({\n            message: error.message,\n            style: 'error' })\n          }, 3000)\n      }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n    const personsToShow = persons.filter((person) =>\n      person.name.toLowerCase().includes(filter.toLowerCase()))\n    console.log(personsToShow);\n    setFilteredPersons(personsToShow)\n  }\n\n  const handlePersonDelete = (id) => {\n    // retrieve person to be deleted acc. to id\n    const personToBeDeleted = persons.find((p) => p.id === id);\n    const confirmDelete = window.confirm(`Delete ${personToBeDeleted.name}?`);\n    if (confirmDelete) {\n      // make use of personsService component for HTTP delete request\n      personsServices\n        .deletePerson(id)\n        .then(() => {\n          // filter out all OTHER persons\n          const filteredPersons = persons.filter((person) => person.id !== id);\n          setPersons(filteredPersons);\n          setNotification({\n            style: 'successful',\n            message: `${personToBeDeleted.name} has been removed`\n          });\n          setTimeout(() => {\n            setNotification({ message: null, style: null });\n          }, 3000)\n        })\n        .catch((error) => {\n          setNotification({\n            style: 'error',\n            message: `${personToBeDeleted.name} has already been removed before`\n          });\n          setTimeout(() => {\n            setNotification({ message: null, style: null });\n          }, 3000);\n          setPersons(filteredPersons);\n        });\n    }\n  }\n\n  return (\n    <div>\n      <Notification notification={notification}/>\n      <PersonForm filter={filter} handleFilterChange={handleFilterChange} onSubmit={addPerson}\n      handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} newName={newName} newNumber={newNumber} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filteredPersons={filteredPersons} filter={filter} handlePersonDelete={handlePersonDelete}/>\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}